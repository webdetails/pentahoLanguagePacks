#
# Copyright 2006 Pentaho Corporation.  All rights reserved.
#
# Copyright 2006 Pentaho Corporation.  All rights reserved.
# This program is free software; you can redistribute it and/or modify it under the 
# terms of the GNU General Public License, version 2 as published by the Free Software 
# Foundation.
#
# You should have received a copy of the GNU General Public License along with this 
# program; if not, you can obtain a copy at http://www.gnu.org/licenses/gpl-2.0.html 
# or from the Free Software Foundation, Inc., 
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.

# Security ACL Names
PentahoAclEntry.USER_NONE=NONE<TRANSLATE ME>
PentahoAclEntry.USER_ADMINISTER=All<TRANSLATE ME>
PentahoAclEntry.USER_MANAGE_PERMS=Grant Permissions<TRANSLATE ME>
PentahoAclEntry.USER_EXECUTE=Execute<TRANSLATE ME>
PentahoAclEntry.USER_SUBSCRIBE=Subscribe<TRANSLATE ME>
PentahoAclEntry.USER_ALL=All<TRANSLATE ME>
PentahoAclEntry.USER_CREATE=Create<TRANSLATE ME>
PentahoAclEntry.USER_UPDATE=Update<TRANSLATE ME>
PentahoAclEntry.USER_DELETE=Delete<TRANSLATE ME>

# Security Messages
UserDetailsRoleListService.ERROR_0001_USERROLELISTSERVICE_NOT_SET=userRoleListService must be set<TRANSLATE ME>

AclPublisher.ERROR_0001_DEFAULT_ACL_REQUIRES_USER_OR_ROLE=Default ACL must have either a user or a role specified<TRANSLATE ME>
AclPublisher.ERROR_0002_DEFAULT_ACL_HAS_BOTH=Default ACL must have either a user or a role specified, but not both<TRANSLATE ME>
DefaultPentahoPasswordEncoder.ERROR_0001_RAWPASS_CANNOT_BE_NULL=rawPass cannot be null<TRANSLATE ME>
DefaultPentahoPasswordEncoder.ERROR_0002_ENCPASS_CANNOT_BE_NULL=encPass cannot be null<TRANSLATE ME>

LoggingInterceptor.DEBUG_BEGIN_METHOD=(LoggingInterceptor) Beginning method<TRANSLATE ME>
LoggingInterceptor.DEBUG_END_METHOD=(LoggingInterceptor) Ending method<TRANSLATE ME>
LoggingInterceptor.DEBUG_RETURN_VALUE=(LoggingInterceptor) Return value: {0}: {1}<TRANSLATE ME>
LoggingInterceptor.DEBUG_EXCEPTION_IN_METHOD=(LoggingInterceptor) Exception in method<TRANSLATE ME>
LoggingInterceptor.DEBUG_EXCEPTION=(LoggingInterceptor) Exception: {0}: {1}<TRANSLATE ME>
LoggingInterceptor.DEBUG_STACK_TRACE=(LoggingInterceptor) Stack trace:<TRANSLATE ME>
LoggingInterceptor.DEBUG_METHOD_NAME=(LoggingInterceptor) Method: {0}<TRANSLATE ME>
LoggingInterceptor.DEBUG_TARGET_OBJECT=(LoggingInterceptor) Target:<TRANSLATE ME>
LoggingInterceptor.DEBUG_METHOD_ARGS=(LoggingInterceptor) Method args: {0}<TRANSLATE ME>

MondrianCatalogPublisher.ERROR_0005_PUBLISH_EXCEPTION=Exception occurred while publishing<TRANSLATE ME>

UseridAttributeLdapContextMapper.ERROR_0001_ATTRIBUTE_NOT_FOUND=LDAP Attribute {0} not found in returned attributes.<TRANSLATE ME>
